# generated by patch-package 6.4.8 on 2022-03-16 11:48:36
#
# command:
#   npx patch-package class-variance-authority
#
# declared package:
#   class-variance-authority: 0.1.0
#
diff --git a/node_modules/class-variance-authority/dist/index.d.ts b/node_modules/class-variance-authority/dist/index.d.ts
index 5f2b154..e0288c9 100644
--- a/node_modules/class-variance-authority/dist/index.d.ts
+++ b/node_modules/class-variance-authority/dist/index.d.ts
@@ -1,15 +1,15 @@
-declare type ClassValue = string | null | undefined | ClassValue[];
-declare type OmitUndefined<T> = T extends undefined ? never : T;
-declare type StringToBoolean<T> = T extends "true" ? true : T extends "false" ? false : T;
+export declare type ClassValue = string | null | undefined | ClassValue[];
+export declare type OmitUndefined<T> = T extends undefined ? never : T;
+export declare type StringToBoolean<T> = T extends "true" ? true : T extends "false" ? false : T;
 export declare type VariantProps<Component extends (...args: any) => any> = OmitUndefined<Parameters<Component>[0]>;
 export declare type CxOptions = ClassValue[];
 export declare type CxReturn = string;
 export declare const cx: <T extends CxOptions>(...classes: T) => CxReturn;
-interface ClassProp {
+export interface ClassProp {
     class?: ClassValue;
 }
-declare type VariantsSchema = Record<string, Record<string, ClassValue>>;
-declare type VariantsConfig<Variants extends VariantsSchema> = {
+export declare type VariantsSchema = Record<string, Record<string, ClassValue>>;
+export declare type VariantsConfig<Variants extends VariantsSchema> = {
     [Variant in keyof Variants]?: StringToBoolean<keyof Variants[Variant]>;
 };
 export declare const cva: <Variants>(base?: ClassValue, config?: (Variants extends VariantsSchema ? {
